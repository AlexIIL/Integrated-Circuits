buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name "oc"
        url "http://maven.cil.li/"
    }
    maven {
        name "Mobius"
        url "http://mobiusstrip.eu/maven/"
    }
    maven {
        name "chickenbones"
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "projectred"
        url "http://projectredwiki.com/maven/"
    }
    ivy {
        name "redlogic"
        artifactPattern "https://dl.dropboxusercontent.com/u/2944265/mods/autobuilt/files/redlogic/[module]-[revision].[ext]"
    }
    ivy {
        name "immibis-core"
        artifactPattern "https://dl.dropboxusercontent.com/u/2944265/mods/autobuilt/files/[module]-[revision].[ext]"
    }
	// Dear RX14, this is a bad idea.  Dear Thog, fix your VPS!
    maven {
        name "rx14"
        url "http://mvn.rx14.co.uk/repo/"
    }
}

apply plugin: 'forge'

version = "${mcVersion}-${modVersion}"
group = "vic.mod.integratedcircuits"
archivesBaseName = "integratedcircuits"

if (System.env.BUILD_NUMBER != null) version = "$version.$System.env.BUILD_NUMBER"

minecraft {
    version = "${mcVersion}-latest"
    runDir = "eclipse"
    
    replaceIn "Constants.java"
    replace "\${version}", project.version
}

dependencies {
    compile "codechicken:CodeChickenLib:${mcVersion}-${cclVersion}:dev"
    compile "codechicken:CodeChickenCore:${mcVersion}-${cccVersion}:dev"
    compile "codechicken:ForgeMultipart:${mcVersion}-${fmpVersion}:dev"
    compile "codechicken:NotEnoughItems:${mcVersion}-${neiVersion}:dev"
    
    compile "mcp.mobius.waila:Waila:${wailaVersion}_${mcVersion}"

    compile("mrtjp:ProjectRed:${mcVersion}-${projectredVersion}:dev") {
        exclude group: "cofh"
        exclude group: "thermalexpansion"
        exclude group: "tconstruct"
    }

    //compile "com.bluepowermod:BluePower:${bluepowerVersion}:deobf"
    compile "com.mod-buildcraft:buildcraft:${buildcraftVersion}:api"
    compile "li.cil.oc:OpenComputers:MC${mcVersion}-${ocVersion}:dev"
    compile name: "redlogic", version: "${redlogicVersion}", ext: "jar"
    compile name: "immibis-core", version: "${imcVersion}", ext: "jar"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourcesJar
    archives deobfJar
}
