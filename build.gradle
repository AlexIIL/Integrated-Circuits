buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name "rx14"
        url "http://mvn.rx14.co.uk/repo/"
    }
    ivy {
        name "redlogic"
        artifactPattern "https://dl.dropboxusercontent.com/u/2944265/mods/autobuilt/files/redlogic/[module]-[revision].[ext]"
    }
    ivy {
        name "immibis-core"
        artifactPattern "https://dl.dropboxusercontent.com/u/2944265/mods/autobuilt/files/[module]-[revision].[ext]"
    }
}

// Read properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

apply plugin: 'forge'

version = "${config.mc.version}-${config.mod.version}"                             //Vic
group = "vic.mod.integratedcircuits"                                               //Is
archivesBaseName = "integratedcircuits"                                            //Too
                                                                                   //Fucking
if (System.env.BUILD_NUMBER != null) version = "$version.$System.env.BUILD_NUMBER" //Lazy

minecraft {
    version = "${config.mc.version}-latest"
    runDir = "eclipse"
}

dependencies {
    compile "codechicken:CodeChickenLib:${config.mc.version}-${config.ccl.version}:dev"
    compile "codechicken:CodeChickenCore:${config.mc.version}-${config.ccc.version}:dev"
    compile "codechicken:ForgeMultipart:${config.mc.version}-${config.fmp.version}:dev"
    compile "codechicken:NotEnoughItems:${config.mc.version}-${config.nei.version}:dev"

    compile("mrtjp:ProjectRed:${config.mc.version}-${config.projectred.version}:dev") {
        exclude group: "cofh"
        exclude group: "thermalexpansion"
        exclude group: "tconstruct"
    }

    compile "com.bluepowermod:BluePower:${config.bluepower.version}:deobf"
    compile "com.mod-buildcraft:buildcraft:6.2.4:api"
    compile name: "redlogic", version: "${config.redlogic.version}", ext: "jar"
    compile name: "immibis-core", version: "${config.imc.version}", ext: "jar"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourcesJar
    archives deobfJar
}
